// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@hydrofoil/shape-to-query shape with count rule generates correct query 1`] = `
"CONSTRUCT { <http://example.org/collection> <http://example.org/numberOfArticles> ?q1. }
WHERE {
  {
    SELECT (COUNT(DISTINCT ?q2) AS ?q1) WHERE {
      ?q2 schema:name ?q3.
      FILTER(REGEX(?q3, \\"Tech\\", \\"i\\"))
      ?q2 rdf:type ?q4.
      FILTER(EXISTS { ?q2 rdf:type schema:DefinedTermSet, <https://cube.link/meta/SharedDimension>. })
    }
  }
}"
`;

exports[`@hydrofoil/shape-to-query shapeToQuery construct shacl advanced features rules does not produce empty union groups 1`] = `
"CONSTRUCT {
  ?q1 rdf:type schema:Country.
  ?q1 schema:name ?q2.
  ?q1 schema:identifier ?q3.
  ?q1 schema:containedInPlace <http://example.org/Europe>.
}
WHERE {
  ?q1 rdf:type schema:Country.
  { ?q1 schema:name ?q2. }
  UNION
  { ?q1 schema:identifier ?q3. }
}"
`;

exports[`@hydrofoil/shape-to-query shapeToQuery construct shacl advanced features rules does not produce nested optionals 1`] = `
"CONSTRUCT {
  ?q1 rdf:type schema:Country.
  ?q1 schema:identifier ?q2.
  ?q1 schema:name ?q3.
  <http://localhost:1429/countries> hydra:member ?q1.
}
WHERE {
  ?q1 rdf:type schema:Country.
  OPTIONAL { ?q1 schema:identifier ?q2. }
  ?q1 schema:name ?q3.
  FILTER(LANG(?q3) IN(\\"en\\", \\"de\\"))
}"
`;

exports[`@hydrofoil/shape-to-query shapeToQuery construct shacl advanced features rules filter shape is applied correctly in SPO Rule 1`] = `
"CONSTRUCT {
  ?q1 rdf:type <http://example.org/Object>.
  ?q1 ?q2 ?q3.
}
WHERE {
  ?q1 rdf:type <http://example.org/Object>;
    ?q2 ?q3.
  ?q2 rdfs:subPropertyOf ?q4.
  VALUES ?q4 {
    skos:related
  }
  ?q3 rdf:type ?q5.
  VALUES ?q5 {
    schema:Organization
  }
}"
`;
